generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  userId        String    @unique @map("user_id")
  orangeEssence Int       @map("orange_essence")
  mythicEssence Int       @map("mythic_essence")
  keys          Int       @map("keys")
  createdAt     DateTime? @default(now()) @map("created_at")
  updatedAt     DateTime? @default(now()) @map("updated_at")

  @@index([userId])
  @@map("users")
}

model Capsule {
  id        String      @id @default(uuid())
  name      String
  type      CapsuleType
  createdAt DateTime?   @default(now()) @map("created_at")
  updatedAt DateTime?   @default(now()) @map("updated_at")

  rewards CapsuleItem[]

  @@index([type])
  @@map("capsules")
}

model UserCapsule {
  id          String    @id @default(uuid())
  userId      String    @map("user_id")
  capsuleId   String    @map("capsule_id")
  openedAt    DateTime? @map("opened_at")
  rewardSetId String?    @map("reward_set_id")
  createdAt   DateTime? @default(now()) @map("created_at")

  rewardSet RewardSet? @relation(fields: [rewardSetId], references: [id])

  @@index([userId])
  @@map("user_capsules")
}

model Item {
  id        String    @id @default(uuid())
  itemId    String    @unique @map("item_id")
  name      String
  type      ItemType
  rarityTier RarityTier @map("rarity_tier")
  createdAt DateTime? @default(now()) @map("created_at")
  updatedAt DateTime? @default(now()) @map("updated_at")

  capsuleItems CapsuleItem[]

  @@index([type])
  @@map("items")
}

model CapsuleItem {
  id         String     @id @default(uuid())
  capsuleId  String     @map("capsule_id")
  itemId     String     @map("item_id")
  createdAt  DateTime?  @default(now()) @map("created_at")
  updatedAt  DateTime?  @default(now()) @map("updated_at")

  capsule Capsule @relation(fields: [capsuleId], references: [id])
  item    Item    @relation(fields: [itemId], references: [id])

  @@map("capsule_items")
}

model RewardSet {
  id        String    @id @default(uuid())
  createdAt DateTime? @default(now()) @map("created_at")

  rewards     Reward[]
  userCapsule UserCapsule[]

  @@map("reward_set")
}

model Reward {
  id          String    @id @default(uuid())
  rewardSetId String    @map("reward_set_id")
  itemId      String    @map("item_id")
  createdAt   DateTime? @default(now()) @map("created_at")

  rewardSet RewardSet @relation(fields: [rewardSetId], references: [id])

  @@map("rewards")
}

enum CapsuleType {
  HEXTECH_CHEST
  CHAMPION_CAPSULE
}

enum ItemType {
  CHAMPION
  SKIN
  CHROMA
}

enum RarityTier {
  STANDARD
  EPIC
  LEGENDARY
  MYTHIC
  ULTIMATE
  EXCLUSIVE
}
