version: '3.8'
services:
  account-database:
    image: postgres:16-alpine
    networks:
      - default
    restart: always
    container_name: service-account-db
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: account
  account-api:
    build: ./service-account/.
    networks:
      - default
    container_name: service-account-api
    ports:
      - 3333:3333
    volumes:
      - ./service-account/.:/usr/src/service-account
    links:
      - account-database
    depends_on:
      - account-database
    command: sh -c "/wait; npm ci; npx prisma generate; npx prisma migrate deploy; npm run start:dev"
    environment:
      - WAIT_HOSTS=account-database:5432
      - WAIT_TIMEOUT=1000
      - WAIT_SLEEP_INTERVAL=5
      - WAIT_HOST_CONNECT_TIMEOUT=300
  inventory-database:
    image: postgres:16-alpine
    networks:
      - default
    restart: always
    container_name: service-inventory-db
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: auth
  inventory-api:
    build: ./service-inventory/.
    networks:
      - default
    container_name: service-inventory-api
    ports:
      - 3334:3333
    volumes:
      - ./service-inventory/.:/usr/src/service-inventory
    links:
      - inventory-database
    depends_on:
      - inventory-database
    command: sh -c "/wait; npm ci; npx prisma generate; npx prisma migrate deploy; npm run start:dev"
    environment:
      - WAIT_HOSTS=inventory-database:5432
      - WAIT_TIMEOUT=1000
      - WAIT_SLEEP_INTERVAL=5
      - WAIT_HOST_CONNECT_TIMEOUT=300
  loot-database:
    image: postgres:16-alpine
    networks:
      - default
    restart: always
    container_name: service-loot-db
    ports:
      - 5434:5432
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: auth
  loot-api:
    build: ./service-loot/.
    networks:
      - messaging
      - default
    container_name: service-loot-api
    ports:
      - 3335:3333
    volumes:
      - ./service-loot/.:/usr/src/service-loot
    links:
      - loot-database
    depends_on:
      - loot-database
    command: sh -c "/wait; npm ci; npx prisma generate; npx prisma migrate deploy; npm run start:dev"
    environment:
      - WAIT_HOSTS=loot-database:5432,kafka:9092
      - WAIT_TIMEOUT=1000
      - WAIT_SLEEP_INTERVAL=5
      - WAIT_HOST_CONNECT_TIMEOUT=300
  catalog-database:
    image: postgres:16-alpine
    networks:
      - default
    restart: always
    container_name: service-catalog-db
    ports:
      - 5435:5432
    environment:
      POSTGRES_USER: docker
      POSTGRES_PASSWORD: docker
      POSTGRES_DB: catalog
  catalog-api:
    build: ./service-catalog/.
    networks:
      - default
      - messaging
    container_name: service-catalog-api
    ports:
      - 3336:3333
    volumes:
      - ./service-catalog/.:/usr/src/service-catalog
    links:
      - catalog-database
    depends_on:
      - catalog-database
    command: sh -c "/wait; npm ci; npx prisma generate; npx prisma migrate deploy; npm run start:dev"
    environment:
      - WAIT_HOSTS=catalog-database:5432,kafka:9092
      - WAIT_TIMEOUT=1000
      - WAIT_SLEEP_INTERVAL=5
      - WAIT_HOST_CONNECT_TIMEOUT=300
  dispatcher:
    build: ./service-dispatcher/.
    networks:
      - messaging
    container_name: service-dispatcher
    volumes:
      - ./service-dispatcher/.:/usr/src/service-dispatcher
    command: npm run start:dev
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - messaging
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - messaging
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  kafka_ui:
    image: provectuslabs/kafka-ui:latest
    networks:
      - messaging
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
networks:
  messaging:
  default: